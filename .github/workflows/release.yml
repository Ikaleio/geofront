name: Release

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build project
        uses: ./.github/actions/build

      - name: Upload native library
        uses: actions/upload-artifact@v4
        with:
          name: lib-${{ matrix.os }}
          path: |
            dist/*.so
            dist/*.dylib
            dist/*.dll
          if-no-files-found: error

  release:
    name: Create Release and Publish to NPM
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install

      - name: Build project (JS and TS files)
        run: bun run build

      - name: Download all native libraries
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Combine artifacts
        run: |
          cp artifacts/lib-ubuntu-latest/*.so dist/
          cp artifacts/lib-macos-latest/*.dylib dist/
          cp artifacts/lib-windows-latest/*.dll dist/
          echo "Final dist directory contents:"
          ls -R dist

      - name: Set up Node.js for publishing
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
